/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  project.apply from: "$rootDir/constants.gradle"
  project.apply from: "$project.projectDir/constants.gradle"
  project.apply from: "$rootDir/android/constants.gradle"

  repositories {
    google()
    jcenter()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.3.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    maven { url = "https://jitpack.io" }
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
  }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

project.apply from: "$rootDir/constants.gradle"
project.apply from: "$rootDir/sample-android/constants.gradle"
project.apply from: "$project.projectDir/constants.gradle"

android {
  compileSdkVersion project.ext.compileSdkVersion

  defaultConfig {
    applicationId "com.google.samples.apps.sunflower"
    minSdkVersion project.ext.minSdkVersion
    targetSdkVersion project.ext.targetSdkVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    versionCode 1
    versionName "0.1.6"
    vectorDrawables.useSupportLibrary true
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

androidExtensions {
  experimental = true
}

dependencies {
  kapt "androidx.room:room-compiler:$roomVersion"
  implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
  implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"
  implementation "android.arch.work:work-runtime-ktx:$workVersion"
  implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
  implementation "androidx.core:core-ktx:$ktxVersion"
  implementation "androidx.room:room-runtime:$roomVersion"
  implementation "com.squareup.picasso:picasso:$picasso"
  implementation "com.google.android.material:material:$materialVersion"
  implementation "com.google.code.gson:gson:$gsonVersion"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"

  implementation project(':android:android-all')
  implementation "com.github.protoman92:KotlinFP:master-SNAPSHOT"

  // Testing dependencies
  androidTestImplementation "androidx.arch.core:core-testing:$androidxCoreTest"
  androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
  androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso"
  androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"
  testImplementation "junit:junit:$junit"

  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
  debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$leakCanary"
}

project.apply from: "$rootDir/sample-android/skipped.gradle"
