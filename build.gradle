buildscript {
  def rootAbsolutePath = projectDir.absolutePath
  project.apply from: "$rootAbsolutePath/constants.gradle"

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.dokka:dokka-gradle-plugin:${project.ext.dokka}")
  }
}


apply plugin: "org.jetbrains.dokka"

def rootAbsolutePath = projectDir.absolutePath

dokka {
  moduleName = dokkaOutputDir
  outputFormat = dokkaOutputFormat
  outputDirectory = rootAbsolutePath
  includeNonPublic = true
  skipEmptyPackages = true

  def validProjects = subprojects.findAll { p -> !p.name.contains("sample") }

  sourceDirs = files(validProjects.collectMany { p -> [
    new File(p.projectDir, "/src/main/java"),
    new File(p.projectDir, "/src/main/kotlin")
  ] })

  validProjects.each { p ->
    def path

    if (p.name.startsWith("android")) {
      path = new File(p.projectDir, "/src/main/java")
    } else {
      path = new File(p.projectDir, "/src/main/kotlin")
    }

    def relativePath = new File(rootAbsolutePath)
      .toPath()
      .relativize(path.toPath())
      .toString()

    linkMapping {
      dir = path.absolutePath.split(File.pathSeparator)
      url = "https://github.com/protoman92/KotlinRedux/tree/master/$relativePath"
      suffix = "#L"
    }

    return path
  }
}

allprojects {
  project.apply from: "$rootAbsolutePath/constants.gradle"
}

subprojects {
  configurations.all {
    // Make sure the latest JitPack releases are used.
    resolutionStrategy.cacheChangingModulesFor 24, "hours"
  }
}

task clean(type: Delete) {
  description = "Delete all build folders in all projects"

  doLast {
    allprojects {
      delete(project.buildDir)
    }
  }
}
